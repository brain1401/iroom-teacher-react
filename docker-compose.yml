version: "3.8"

services:
  # ========================================
  # 메인 애플리케이션 서비스
  # ========================================
  app:
    # 컨테이너 이름
    container_name: iroom-teacher-app

    # Dockerfile을 사용한 빌드 설정
    build:
      context: .
      dockerfile: Dockerfile
      target: production # 프로덕션 스테이지 사용
      args:
        PORT: 3012

    # 포트 매핑
    ports:
      - "3012:3012"

    # 환경 변수 설정
    environment:
      NODE_ENV: production
      PORT: 3012
      # API 서버 주소 (필요시 수정)
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3055}
      # 추가 환경 변수
      TZ: Asia/Seoul

    # 볼륨 마운트 (개발 환경용, 프로덕션에서는 제거)
    # volumes:
    #   - ./src:/app/src:ro  # 소스 코드 읽기 전용 마운트
    #   - ./public:/app/public:ro  # 정적 파일 읽기 전용 마운트

    # 재시작 정책
    restart: unless-stopped

    # 네트워크 설정
    networks:
      - iroom-network

    # 헬스체크 설정 (Dockerfile의 HEALTHCHECK를 오버라이드)
    healthcheck:
      test:
        [
          "CMD",
          "bun",
          "-e",
          "fetch('http://localhost:3012/health').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # 리소스 제한 설정
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 256M

    # 로깅 설정
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ========================================
  # 개발 환경용 서비스 (선택적)
  # ========================================
  app-dev:
    # 개발 환경 전용 서비스
    container_name: iroom-teacher-app-dev

    # 개발용 빌드 설정
    build:
      context: .
      dockerfile: Dockerfile
      target: build # 빌드 스테이지 사용 (hot reload 지원)

    # 포트 매핑
    ports:
      - "3013:3012" # 다른 포트 사용

    # 개발 환경 변수
    environment:
      NODE_ENV: development
      PORT: 3012
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3055}
      # Bun 개발 모드 설정
      BUN_DEV: 1

    # 개발용 볼륨 마운트 (hot reload)
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./app.config.ts:/app/app.config.ts
      - ./package.json:/app/package.json
      # node_modules는 제외 (컨테이너 내부 사용)
      - /app/node_modules

    # 개발 명령어 오버라이드
    command: ["bun", "run", "dev"]

    # 네트워크 설정
    networks:
      - iroom-network

    # 프로파일 설정 (선택적 실행)
    profiles:
      - dev

  # ========================================
  # Nginx 리버스 프록시 (선택적)
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: iroom-nginx

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # SSL 인증서 (프로덕션용)
      # - ./nginx/ssl:/etc/nginx/ssl:ro

    depends_on:
      - app

    networks:
      - iroom-network

    restart: unless-stopped

    # 프로파일 설정 (선택적 실행)
    profiles:
      - production

# ========================================
# 네트워크 설정
# ========================================
networks:
  iroom-network:
    driver: bridge
    name: iroom-network

# ========================================
# 볼륨 설정 (필요시 추가)
# ========================================
volumes:
  app-data:
    driver: local
